spring.application.name=rca
spring.cloud.stream.defaultBinder=kafka

server.port=9443

logging.level.org.springframework.cloud.stream=INFO
logging.level.org.springframework.cloud.stream.binder.kafka=INFO

logging.level.org.springframework.boot.context.properties.bind=DEBUG
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.9.178:6306/commons
spring.datasource.username=cygnet
spring.datasource.password=12qwaszx
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

spring.profiles.active=default

spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.autoCreateTopics=true


spring.kafka.consumer.properties.spring.json.trusted.packages="in.co.sa.ivinv.commons"

# recon-events
spring.cloud.stream.bindings.reconTrigger-out-0.destination=recon-events
spring.cloud.stream.bindings.reconTrigger-out-0.producer.partitionCount=1
spring.cloud.stream.bindings.reconTrigger-out-0.content-type=application/json


# online-events
spring.cloud.stream.bindings.onlineSender-out-0.destination=online-events
spring.cloud.stream.bindings.onlineSender-out-0.producer.partitionCount=1
spring.cloud.stream.bindings.onlineSender-out-0.content-type=application/json


# gatekeeper inputs
spring.cloud.stream.bindings.gatekeeperIn0-in-0.destination=recon-events
spring.cloud.stream.bindings.gatekeeperIn0-in-0.consumer.partitioned=false
spring.cloud.stream.bindings.gatekeeperIn0-in-0.content-type=application/json


spring.cloud.stream.bindings.gatekeeperIn1-in-0.destination=online-events
spring.cloud.stream.bindings.gatekeeperIn1-in-0.consumer.partitioned=false
spring.cloud.stream.bindings.gatekeeperIn1-in-0.content-type=application/json

# gatekeeper output
spring.cloud.stream.bindings.gatekeeper-out-0.destination=builder-events
spring.cloud.stream.bindings.gatekeeper-out-0.producer.partitionCount=1

# builder input/output
spring.cloud.stream.bindings.builderIn0-in-0.destination=builder-events
spring.cloud.stream.bindings.builderIn0-in-0.consumer.partitioned=false
spring.cloud.stream.bindings.builder-out-0.destination=persister-events
spring.cloud.stream.bindings.builder-out-0.producer.partitionCount=1

# persister
spring.cloud.stream.bindings.persisterIn0-in-0.destination=persister-events
spring.cloud.stream.bindings.persisterIn0-in-0.consumer.partitioned=false

spring.cloud.stream.bindings.output.content-type=application/json

spring.cloud.function.definition=gatekeeperIn0;gatekeeperIn1;builderIn0;persisterIn0

#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.type.mapping=UserEvent:entities.config.in.co.sa.inventoryentory.UserEvent,CustomerEvent:entities.config.in.co.sa.inventoryentory.CustomerEvent
